import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useRouter } from 'next/router';
import { useEffect } from 'react';
import { connect, useDispatch } from 'react-redux';
import { END } from 'redux-saga';

import { LoginGithubAction } from '../actions/user/login-github';
import { Aside } from '../components/layout/Aside';
import { Main } from '../components/layout/Main';
import { MainTitle } from '../components/layout/Main.style';
import { useAuthenticate } from '../hooks/use-authenticate';
import { IState } from '../reducers';
import { wrapper } from '../store';
import { GetPostsAction } from '../actions/post/get-posts';

const Home: NextPage<IState> = ({ post }) => {
    console.log(post);

    const dispatch = useDispatch();

    const { validateToken } = useAuthenticate();

    useEffect(() => {
        const token = validateToken();

        if (token === null) {
            const url = new URL(window.location.href);

            const code = url.searchParams.get('code');

            dispatch({
                type: LoginGithubAction.REQUEST,
                payload: {
                    code,
                },
            });
        }
    }, []);

    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Main>
                <MainTitle>
                    <h2>최신 포스트</h2>
                </MainTitle>
            </Main>
            <Aside></Aside>
        </div>
    );
};

export const getServerSideProps = wrapper.getServerSideProps(
    (store) =>
        async ({ req, res, ...etc }) => {
            store.dispatch({
                type: GetPostsAction.REQUEST,
                payload: {
                    limit: 12,
                },
            });

            store.dispatch(END);

            await store.sagaTask.toPromise();

            return {
                props: {},
            };
        },
);

export default connect((state: IState) => state)(Home);
